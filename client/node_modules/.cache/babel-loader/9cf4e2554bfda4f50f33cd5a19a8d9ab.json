{"ast":null,"code":"var _jsxFileName = \"/Users/jessicastabler/Desktop/Projects/deep-thoughts/client/src/components/ThoughtForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThoughtForm = () => {\n  _s();\n\n  const [thoughtText, setText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n  const [addThought, {\n    error\n  }] = useMutation(ADD_THOUGHT, {\n    update(cache, _ref) {\n      let {\n        data: {\n          addThought\n        }\n      } = _ref;\n\n      // could potentially not exist yet, so wrap in a try/catch\n      try {\n        // update me array's cache\n        const {\n          me\n        } = cache.readQuery({\n          query: QUERY_ME\n        });\n        cache.writeQuery({\n          query: QUERY_ME,\n          data: {\n            me: { ...me,\n              thoughts: [...me.thoughts, addThought]\n            }\n          }\n        });\n      } catch (e) {\n        console.warn(\"First thought insertion by user!\");\n      } // update thought array's cache\n\n\n      const {\n        thoughts\n      } = cache.readQuery({\n        query: QUERY_THOUGHTS\n      });\n      cache.writeQuery({\n        query: QUERY_THOUGHTS,\n        data: {\n          thoughts: [addThought, ...thoughts]\n        }\n      });\n    }\n\n  }); // update state based on form input changes\n\n  const handleChange = event => {\n    if (event.target.value.length <= 280) {\n      setText(event.target.value);\n      setCharacterCount(event.target.value.length);\n    }\n  }; // submit form\n\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await addThought({\n        variables: {\n          thoughtText\n        }\n      }); // clear form value\n\n      setText('');\n      setCharacterCount(0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: `m-0 ${characterCount === 280 || error ? 'text-error' : ''}`,\n      children: [\"Character Count: \", characterCount, \"/280\", error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2\",\n        children: \"Something went wrong...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"flex-row justify-center justify-space-between-md align-stretch\",\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Here's a new thought...\",\n        value: thoughtText,\n        className: \"form-input col-12 col-md-9\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn col-12 col-md-3\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThoughtForm, \"XrYxD22tnNE676rE3nyqO7x+EU0=\", false, function () {\n  return [useMutation];\n});\n\n_c = ThoughtForm;\nexport default ThoughtForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThoughtForm\");","map":{"version":3,"names":["React","useState","useMutation","ADD_THOUGHT","QUERY_THOUGHTS","QUERY_ME","ThoughtForm","thoughtText","setText","characterCount","setCharacterCount","addThought","error","update","cache","data","me","readQuery","query","writeQuery","thoughts","e","console","warn","handleChange","event","target","value","length","handleFormSubmit","preventDefault","variables"],"sources":["/Users/jessicastabler/Desktop/Projects/deep-thoughts/client/src/components/ThoughtForm/index.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      \n        // could potentially not exist yet, so wrap in a try/catch\n      try {\n        // update me array's cache\n        const { me } = cache.readQuery({ query: QUERY_ME });\n        cache.writeQuery({\n          query: QUERY_ME,\n          data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n        });\n      } catch (e) {\n        console.warn(\"First thought insertion by user!\")\n      }\n\n      // update thought array's cache\n      const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n      cache.writeQuery({\n        query: QUERY_THOUGHTS,\n        data: { thoughts: [addThought, ...thoughts] },\n      });\n    }\n  });\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    if (event.target.value.length <= 280) {\n      setText(event.target.value);\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      await addThought({\n        variables: { thoughtText },\n      });\n\n      // clear form value\n      setText('');\n      setCharacterCount(0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <p\n        className={`m-0 ${characterCount === 280 || error ? 'text-error' : ''}`}\n      >\n        Character Count: {characterCount}/280\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleFormSubmit}\n      >\n        <textarea\n          placeholder=\"Here's a new thought...\"\n          value={thoughtText}\n          className=\"form-input col-12 col-md-9\"\n          onChange={handleChange}\n        ></textarea>\n        <button className=\"btn col-12 col-md-3\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}